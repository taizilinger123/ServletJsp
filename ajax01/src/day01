1.Ajax简介
Asynchronous  JavaScript  and  XML(JSON) 
异步JavaScript和XML
Ajax属于客户端和服务器端交互的一项技术
原有交互模式：(整个页面刷新+请求和响应同步处理)
浏览器发请求-->Tomcat服务器-->Tomcat将响应信息给浏览器-->JSP-->浏览器显示响应结果
Ajax交互模式：(局部刷新+异步处理)
浏览器发请求-->XMLHttpRequest发送-->Tomcat服务器-->Tomcat返回结果-->XMLHttpRequest接收结果-->将结果显示到浏览器页面
2.Ajax好处
--具有局部刷新和异步处理特性
--提高了程序交互效率(传递数据量少)
--提升用户体验(避免了整个页面频繁刷新)
3.Ajax技术
Ajax技术是一系列技术的综合运用。
--基于JS发请求和响应处理
--以XMLHttpRequest对象为核心
--涉及HTML,CSS页面渲染技术
--涉及XML,JSON等数据交互格式
XMLHttpRequest方法：
  --open("GET|POST",URL);
  --send();
  --onreadystatechange 事件
    readyState改变时触发注册事件

http://localhost:8080/ajax01/index.jsp#
http://localhost:8080/ajax01/check.do?name=scott
XMLHttpRequest属性
  --readyState:0,1,2,3,4
  --status:HTTP响应CODE,例如200,404,500
  --responseText:获取服务器返回文本信息
  --responseXML:获取服务器返回的XML信息

$("#id")===document.getElementById("id");
js-->bootstrap.js-->样式
js-->ext.js
  ==================jQuery==============================
  $.ajax()-->XMLHttpRequest
  $.ajax({
      url:请求地址，
      type:请求类型post|get,
      data:提交的数据,
      async:同步或异步处理true|false,
      dataType:预期服务器返回结果类型，
      success:成功回调函数，
      error:失败回调函数，
      beforeSend:请求发送前回调函数
  });

a.选择器
b.属性操作
c.事件
d.文档操作

  var v = {key1:value1,key2:value2};//json对象类型
  v.key1
  v.key2
  
  $.ajax({type:"post"});-->XMLHttpRequest
  
  $.get(url,data,callback,type);-->$.getJSON(url,data,callback);
                                -->$.getScript(url,data,callback);
  $.post()
  
  $("div").load("demo1.do");
  
1.JSON数据格式
JavaScript Object Notation 
JavaScript对象类型格式
var v = {key1:value1,key2:value2};
v.key1//访问key1对应的value1
v.key2//访问key2对应的value2

var v1 = [
{name:"tom",age:20},
{name:"scott",age:22}
]
//v1[1].name访问JSON对象数组
var v2 = {name:"tom",
          books:[
                 {author:"rose",title:"Java开发"},
                 {author:"rose",title:"Spring开发"}
                ]        
          };
v2.books[0].title
for(var i=0;i<v2.books.length;i++){
  var title = v2.books[i].title;
}

