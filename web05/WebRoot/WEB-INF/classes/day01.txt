1.让一个servlet处理多种请求
   step1,后缀匹配
   比如
	   <servlet-mapping>
	      <servlet-name>ActionServlet</servlet-name>
	      <url-pattern>*.do</url-pattern>
	  </servlet-mapping>
  step2,分析请求资源路径
  http://localhost:8080/web05/hello.jsp
2.jsp
   (1)jsp是什么？
      sun公司制订的一种服务器端动态页面技术规范。(jetty weblogic jboss)
      注:
      a.虽然servlet也可以生成动态页面，但是过于繁琐(out.println),并且很难维护(比如要修改页面就得
      修改java代码),所以,sun才制订了jsp规范。
      b.jsp是一个以.jsp为后缀的文件，容器会将这个文件转换成一个对应的servlet然后执行。
   (2)如何写一个jsp?
      step1,写一个以.jsp为后缀的文件。
      step2,在该文件里面，可以添加如下内容:
            1)html(css,js)  直接写即可。
            2)java代码 
              a.java代码片断
                <% java语句 %> 
              b.jsp表达式
                <%=java表达式%>
            3)隐含对象
               a.什么是隐含对象
                  可以直接使用的对象，比如out,request,response等。
               b.为什么可以直接使用这些隐含对象
                  容器会添加获得这些对象的代码。
            4)指令
               a.什么是指令
                 通知容器，再将jsp转换成一个servlet时，做一些额外的处理，比如导包。
               b.指令的格式
                 <%@指令名  属性=值  %>
               c.page指令
                  import属性:导包，比如
                         <%@page import="java.util.*,java.text.*"%>
                        contentType属性:设置response.setContentType方法的参数值,比如
                        <%@page contentType="text/html;charset=utf-8"%>
                        pageEncoding属性：告诉容器，在读取jsp文件的内容时，使用指定的字符集来解码。
   (3)jsp是如何运行的？
      step1,容器要将jsp转换成一个servlet
            html(css,js)---->service方法当中，使用out.write输出。
            <%   %>     ---->service方法当中，照搬。
            <%=  %>     ---->service方法当中，使用out.print输出。
      step2,调用该servlet。